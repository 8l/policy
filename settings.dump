aggregate                    *            *            *               true
aggregate                    *            *            console         false
aggregate                    *            *            consoleProject  false
aggregate                    *            *            consoleQuick    false
aggregate                    *            *            run             false
aggregate                    *            *            runMain         false
appConfiguration             *            *            *               <xsbt.boot.AppConfiguration>
artifact                     compat       *            *               Artifact("compat", "jar", "jar", -, -, -, -)
artifact                     compat       *            makePom         Artifact("compat", "pom", "pom", -, -, -, -)
artifact                     compat       compile      packageBin      Artifact("compat", "jar", "jar", -, -, -, -)
artifact                     compat       compile      packageDoc      Artifact("compat", "doc", "jar", "javadoc", -, -, -)
artifact                     compat       compile      packageSrc      Artifact("compat", "src", "jar", "sources", -, -, -)
artifact                     compat       test         packageBin      Artifact("compat", "jar", "jar", "tests", -, -, -)
artifact                     compat       test         packageDoc      Artifact("compat", "doc", "jar", "tests-javadoc", -, -, -)
artifact                     compat       test         packageSrc      Artifact("compat", "src", "jar", "tests-sources", -, -, -)
artifact                     compiler     *            *               Artifact("compiler", "jar", "jar", -, -, -, -)
artifact                     compiler     *            makePom         Artifact("compiler", "pom", "pom", -, -, -, -)
artifact                     compiler     compile      packageBin      Artifact("compiler", "jar", "jar", -, -, -, -)
artifact                     compiler     compile      packageDoc      Artifact("compiler", "doc", "jar", "javadoc", -, -, -)
artifact                     compiler     compile      packageSrc      Artifact("compiler", "src", "jar", "sources", -, -, -)
artifact                     compiler     test         packageBin      Artifact("compiler", "jar", "jar", "tests", -, -, -)
artifact                     compiler     test         packageDoc      Artifact("compiler", "doc", "jar", "tests-javadoc", -, -, -)
artifact                     compiler     test         packageSrc      Artifact("compiler", "src", "jar", "tests-sources", -, -, -)
artifact                     library      *            *               Artifact("library", "jar", "jar", -, -, -, -)
artifact                     library      *            makePom         Artifact("library", "pom", "pom", -, -, -, -)
artifact                     library      compile      packageBin      Artifact("library", "jar", "jar", -, -, -, -)
artifact                     library      compile      packageDoc      Artifact("library", "doc", "jar", "javadoc", -, -, -)
artifact                     library      compile      packageSrc      Artifact("library", "src", "jar", "sources", -, -, -)
artifact                     library      test         packageBin      Artifact("library", "jar", "jar", "tests", -, -, -)
artifact                     library      test         packageDoc      Artifact("library", "doc", "jar", "tests-javadoc", -, -, -)
artifact                     library      test         packageSrc      Artifact("library", "src", "jar", "tests-sources", -, -, -)
artifact                     root         *            *               Artifact("root", "jar", "jar", -, -, -, -)
artifact                     root         *            makePom         Artifact("root", "pom", "pom", -, -, -, -)
artifact                     root         compile      packageBin      Artifact("root", "jar", "jar", -, -, -, -)
artifact                     root         compile      packageDoc      Artifact("root", "doc", "jar", "javadoc", -, -, -)
artifact                     root         compile      packageSrc      Artifact("root", "src", "jar", "sources", -, -, -)
artifact                     root         test         packageBin      Artifact("root", "jar", "jar", "tests", -, -, -)
artifact                     root         test         packageDoc      Artifact("root", "doc", "jar", "tests-javadoc", -, -, -)
artifact                     root         test         packageSrc      Artifact("root", "src", "jar", "tests-sources", -, -, -)
artifactClassifier           *            *            packageDoc      "javadoc"
artifactClassifier           *            *            packageSrc      "sources"
artifactPath                 compat       *            makePom         /mirror/r/policy/compat/target/scala-2.10/compat_2.10-0.1-SNAPSHOT.pom
artifactPath                 compat       compile      packageBin      /mirror/r/policy/compat/target/scala-2.10/compat_2.10-0.1-SNAPSHOT.jar
artifactPath                 compat       compile      packageDoc      /mirror/r/policy/compat/target/scala-2.10/compat_2.10-0.1-SNAPSHOT-javadoc.jar
artifactPath                 compat       compile      packageSrc      /mirror/r/policy/compat/target/scala-2.10/compat_2.10-0.1-SNAPSHOT-sources.jar
artifactPath                 compat       test         packageBin      /mirror/r/policy/compat/target/scala-2.10/compat_2.10-0.1-SNAPSHOT-tests.jar
artifactPath                 compat       test         packageDoc      /mirror/r/policy/compat/target/scala-2.10/compat_2.10-0.1-SNAPSHOT-tests-javadoc.jar
artifactPath                 compat       test         packageSrc      /mirror/r/policy/compat/target/scala-2.10/compat_2.10-0.1-SNAPSHOT-tests-sources.jar
artifactPath                 compiler     *            makePom         /mirror/r/policy/compiler/target/scala-2.10/compiler_2.10-0.1-SNAPSHOT.pom
artifactPath                 compiler     compile      packageBin      /mirror/r/policy/compiler/target/scala-2.10/compiler_2.10-0.1-SNAPSHOT.jar
artifactPath                 compiler     compile      packageDoc      /mirror/r/policy/compiler/target/scala-2.10/compiler_2.10-0.1-SNAPSHOT-javadoc.jar
artifactPath                 compiler     compile      packageSrc      /mirror/r/policy/compiler/target/scala-2.10/compiler_2.10-0.1-SNAPSHOT-sources.jar
artifactPath                 compiler     test         packageBin      /mirror/r/policy/compiler/target/scala-2.10/compiler_2.10-0.1-SNAPSHOT-tests.jar
artifactPath                 compiler     test         packageDoc      /mirror/r/policy/compiler/target/scala-2.10/compiler_2.10-0.1-SNAPSHOT-tests-javadoc.jar
artifactPath                 compiler     test         packageSrc      /mirror/r/policy/compiler/target/scala-2.10/compiler_2.10-0.1-SNAPSHOT-tests-sources.jar
artifactPath                 library      *            makePom         /mirror/r/policy/library/target/scala-2.10/library_2.10-0.1-SNAPSHOT.pom
artifactPath                 library      compile      packageBin      /mirror/r/policy/library/target/scala-2.10/library_2.10-0.1-SNAPSHOT.jar
artifactPath                 library      compile      packageDoc      /mirror/r/policy/library/target/scala-2.10/library_2.10-0.1-SNAPSHOT-javadoc.jar
artifactPath                 library      compile      packageSrc      /mirror/r/policy/library/target/scala-2.10/library_2.10-0.1-SNAPSHOT-sources.jar
artifactPath                 library      test         packageBin      /mirror/r/policy/library/target/scala-2.10/library_2.10-0.1-SNAPSHOT-tests.jar
artifactPath                 library      test         packageDoc      /mirror/r/policy/library/target/scala-2.10/library_2.10-0.1-SNAPSHOT-tests-javadoc.jar
artifactPath                 library      test         packageSrc      /mirror/r/policy/library/target/scala-2.10/library_2.10-0.1-SNAPSHOT-tests-sources.jar
artifactPath                 root         *            makePom         /mirror/r/policy/target/scala-2.10/root_2.10-0.1-SNAPSHOT.pom
artifactPath                 root         compile      packageBin      /mirror/r/policy/target/scala-2.10/root_2.10-0.1-SNAPSHOT.jar
artifactPath                 root         compile      packageDoc      /mirror/r/policy/target/scala-2.10/root_2.10-0.1-SNAPSHOT-javadoc.jar
artifactPath                 root         compile      packageSrc      /mirror/r/policy/target/scala-2.10/root_2.10-0.1-SNAPSHOT-sources.jar
artifactPath                 root         test         packageBin      /mirror/r/policy/target/scala-2.10/root_2.10-0.1-SNAPSHOT-tests.jar
artifactPath                 root         test         packageDoc      /mirror/r/policy/target/scala-2.10/root_2.10-0.1-SNAPSHOT-tests-javadoc.jar
artifactPath                 root         test         packageSrc      /mirror/r/policy/target/scala-2.10/root_2.10-0.1-SNAPSHOT-tests-sources.jar
autoApiMappings              *            *            *               false
autoCompilerPlugins          *            *            *               true
autoScalaLibrary             *            *            *               true
baseDirectory                {.}          *            *               /mirror/r/policy
baseDirectory                compat       *            *               /mirror/r/policy/compat
baseDirectory                compiler     *            *               /mirror/r/policy/compiler
baseDirectory                library      *            *               /mirror/r/policy/library
baseDirectory                root         *            *               /mirror/r/policy
buildDependencies            *            *            *               <sbt.BuildDependencies>
cacheDirectory               compat       *            *               /mirror/r/policy/compat/target/scala-2.10/cache/compat/global
cacheDirectory               compat       compile      *               /mirror/r/policy/compat/target/scala-2.10/cache/compat/compile
cacheDirectory               compat       test         *               /mirror/r/policy/compat/target/scala-2.10/cache/compat/test
cacheDirectory               compiler     *            *               /mirror/r/policy/compiler/target/scala-2.10/cache/compiler/global
cacheDirectory               compiler     compile      *               /mirror/r/policy/compiler/target/scala-2.10/cache/compiler/compile
cacheDirectory               compiler     test         *               /mirror/r/policy/compiler/target/scala-2.10/cache/compiler/test
cacheDirectory               library      *            *               /mirror/r/policy/library/target/scala-2.10/cache/library/global
cacheDirectory               library      compile      *               /mirror/r/policy/library/target/scala-2.10/cache/library/compile
cacheDirectory               library      test         *               /mirror/r/policy/library/target/scala-2.10/cache/library/test
cacheDirectory               root         *            *               /mirror/r/policy/target/scala-2.10/cache/root/global
cacheDirectory               root         compile      *               /mirror/r/policy/target/scala-2.10/cache/root/compile
cacheDirectory               root         test         *               /mirror/r/policy/target/scala-2.10/cache/root/test
cancelable                   *            *            *               false
classDirectory               compat       compile      *               /mirror/r/policy/compat/target/scala-2.10/classes
classDirectory               compat       test         *               /mirror/r/policy/compat/target/scala-2.10/test-classes
classDirectory               compiler     compile      *               /mirror/r/policy/compiler/target/scala-2.10/classes
classDirectory               compiler     test         *               /mirror/r/policy/compiler/target/scala-2.10/test-classes
classDirectory               library      compile      *               /mirror/r/policy/library/target/scala-2.10/classes
classDirectory               library      test         *               /mirror/r/policy/library/target/scala-2.10/test-classes
classDirectory               root         compile      *               /mirror/r/policy/target/scala-2.10/classes
classDirectory               root         test         *               /mirror/r/policy/target/scala-2.10/test-classes
classpathOptions             *            *            *               ClasspathOptions(true, false, false, true, true)
classpathOptions             *            *            console         ClasspathOptions(true, true, true, true, true)
compileOrder                 *            *            *               Mixed
configuration                compat       compile      *               Configuration("compile", -, true, -, true)
configuration                compat       optional     *               Configuration("optional", -, true, -, true)
configuration                compat       provided     *               Configuration("provided", -, true, -, true)
configuration                compat       runtime      *               Configuration("runtime", -, true, -, true)
configuration                compat       test         *               Configuration("test", -, true, -, true)
configuration                compiler     compile      *               Configuration("compile", -, true, -, true)
configuration                compiler     optional     *               Configuration("optional", -, true, -, true)
configuration                compiler     provided     *               Configuration("provided", -, true, -, true)
configuration                compiler     runtime      *               Configuration("runtime", -, true, -, true)
configuration                compiler     test         *               Configuration("test", -, true, -, true)
configuration                library      compile      *               Configuration("compile", -, true, -, true)
configuration                library      optional     *               Configuration("optional", -, true, -, true)
configuration                library      provided     *               Configuration("provided", -, true, -, true)
configuration                library      runtime      *               Configuration("runtime", -, true, -, true)
configuration                library      test         *               Configuration("test", -, true, -, true)
configuration                root         compile      *               Configuration("compile", -, true, -, true)
configuration                root         optional     *               Configuration("optional", -, true, -, true)
configuration                root         provided     *               Configuration("provided", -, true, -, true)
configuration                root         runtime      *               Configuration("runtime", -, true, -, true)
configuration                root         test         *               Configuration("test", -, true, -, true)
conflictManager              *            *            *               ConflictManager("latest-revision", "*", "*")
conflictWarning              *            *            *               ConflictWarning("global", error, true)
conflictWarning              compat       *            *               ConflictWarning("{file:/mirror/r/policy/}compat", error, true)
conflictWarning              compiler     *            *               ConflictWarning("{file:/mirror/r/policy/}compiler", error, true)
conflictWarning              library      *            *               ConflictWarning("{file:/mirror/r/policy/}library", error, true)
conflictWarning              root         *            *               ConflictWarning("{file:/mirror/r/policy/}root", error, true)
connectInput                 *            *            *               false
crossPaths                   *            *            *               true
crossTarget                  compat       *            *               /mirror/r/policy/compat/target/scala-2.10
crossTarget                  compiler     *            *               /mirror/r/policy/compiler/target/scala-2.10
crossTarget                  library      *            *               /mirror/r/policy/library/target/scala-2.10
crossTarget                  root         *            *               /mirror/r/policy/target/scala-2.10
crossVersion                 *            *            *               disabled
crossVersion                 compat       *            *               Binary
crossVersion                 compiler     *            *               Binary
crossVersion                 library      *            *               Binary
crossVersion                 root         *            *               Binary
defaultConfiguration         *            *            *               Configuration("compile", -, true, -, true)
dependencyUpdatesReportFile  compat       *            *               /mirror/r/policy/compat/target/dependency-updates.txt
dependencyUpdatesReportFile  compiler     *            *               /mirror/r/policy/compiler/target/dependency-updates.txt
dependencyUpdatesReportFile  library      *            *               /mirror/r/policy/library/target/dependency-updates.txt
dependencyUpdatesReportFile  root         *            *               /mirror/r/policy/target/dependency-updates.txt
description                  compat       *            *               "compat"
description                  compiler     *            *               "compiler"
description                  library      *            *               "library"
description                  root         *            *               "root"
exportJars                   *            *            *               false
fork                         *            *            *               false
gpgCommand                   *            *            *               "gpg"
history                      compat       *            *               /mirror/r/policy/compat/target/.history
history                      compiler     *            *               /mirror/r/policy/compiler/target/.history
history                      library      *            *               /mirror/r/policy/library/target/.history
history                      root         *            *               /mirror/r/policy/target/.history
isSnapshot                   compat       *            *               true
isSnapshot                   compiler     *            *               true
isSnapshot                   library      *            *               true
isSnapshot                   root         *            *               true
ivyLoggingLevel              *            *            *               DownloadOnly
ivyPaths                     compat       *            *               <sbt.IvyPaths>
ivyPaths                     compiler     *            *               <sbt.IvyPaths>
ivyPaths                     library      *            *               <sbt.IvyPaths>
ivyPaths                     root         *            *               <sbt.IvyPaths>
ivyScala                     compat       *            *               IvyScala("2.10.4", "2.10", -, true, false, false, "org.scala-lang")
ivyScala                     compiler     *            *               IvyScala("2.10.4", "2.10", -, true, false, false, "org.scala-lang")
ivyScala                     library      *            *               IvyScala("2.10.4", "2.10", -, true, false, false, "org.scala-lang")
ivyScala                     root         *            *               IvyScala("2.10.4", "2.10", -, true, false, false, "org.scala-lang")
ivyValidate                  *            *            *               false
javaSource                   compat       compile      *               /mirror/r/policy/compat/src/main/java
javaSource                   compat       test         *               /mirror/r/policy/compat/src/test/java
javaSource                   compiler     compile      *               /mirror/r/policy/compiler/src/main/java
javaSource                   compiler     test         *               /mirror/r/policy/compiler/src/test/java
javaSource                   library      compile      *               /mirror/r/policy/library/src/main/java
javaSource                   library      test         *               /mirror/r/policy/library/src/test/java
javaSource                   root         compile      *               /mirror/r/policy/src/main/java
javaSource                   root         test         *               /mirror/r/policy/src/test/java
loadedBuild                  *            *            *               <sbt.LoadedBuild>
logBuffered                  *            *            *               false
logBuffered                  *            *            test            true
logBuffered                  *            *            testOnly        true
logBuffered                  *            *            testQuick       true
makePomConfiguration         compat       *            *               MakePomConfiguration(/mirror/r/policy/compat/target/scala-2.10/compat_2.10-0.1-SNAPSHOT.pom, ModuleInfo("compat", "compat", -, -, -, "compat", -, -), -, -, -, -, false, -)
makePomConfiguration         compiler     *            *               MakePomConfiguration(/mirror/r/policy/compiler/target/scala-2.10/compiler_2.10-0.1-SNAPSHOT.pom, ModuleInfo("compiler", "compiler", -, -, -, "compiler", -, -), -, -, -, -, false, -)
makePomConfiguration         library      *            *               MakePomConfiguration(/mirror/r/policy/library/target/scala-2.10/library_2.10-0.1-SNAPSHOT.pom, ModuleInfo("library", "library", -, -, -, "library", -, -), -, -, -, -, false, -)
makePomConfiguration         root         *            *               MakePomConfiguration(/mirror/r/policy/target/scala-2.10/root_2.10-0.1-SNAPSHOT.pom, ModuleInfo("root", "root", -, -, -, "root", -, -), -, -, -, -, false, -)
managedDirectory             {.}          *            *               /mirror/r/policy/lib_managed
managedScalaInstance         *            *            *               true
maxErrors                    *            *            *               100
moduleName                   compat       *            *               "compat"
moduleName                   compiler     *            *               "compiler"
moduleName                   library      *            *               "library"
moduleName                   root         *            *               "root"
name                         compat       *            *               "compat"
name                         compiler     *            *               "compiler"
name                         library      *            *               "library"
name                         root         *            *               "root"
normalizedName               compat       *            *               "compat"
normalizedName               compiler     *            *               "compiler"
normalizedName               library      *            *               "library"
normalizedName               root         *            *               "root"
offline                      *            *            *               false
onLoadMessage                compat       *            *               "Set current project to compat (in build file:/mirror/r/policy/)"
onLoadMessage                compiler     *            *               "Set current project to compiler (in build file:/mirror/r/policy/)"
onLoadMessage                library      *            *               "Set current project to library (in build file:/mirror/r/policy/)"
onLoadMessage                root         *            *               "Set current project to root (in build file:/mirror/r/policy/)"
organization                 compat       *            *               "compat"
organization                 compiler     *            *               "compiler"
organization                 library      *            *               "library"
organization                 root         *            *               "root"
organizationName             compat       *            *               "compat"
organizationName             compiler     *            *               "compiler"
organizationName             library      *            *               "library"
organizationName             root         *            *               "root"
overrideBuildResolvers       compat       *            *               false
overrideBuildResolvers       compiler     *            *               false
overrideBuildResolvers       library      *            *               false
overrideBuildResolvers       root         *            *               false
parallelExecution            *            *            *               true
pollInterval                 *            *            *               500
pomAllRepositories           *            *            *               false
previousReferences           *            *            *               <sbt.Previous$References>
projectId                    compat       *            *               ModuleID("compat", "compat", "0.1-SNAPSHOT", -, false, true, false, -, -, -, Binary)
projectId                    compiler     *            *               ModuleID("compiler", "compiler", "0.1-SNAPSHOT", -, false, true, false, -, -, -, Binary)
projectId                    library      *            *               ModuleID("library", "library", "0.1-SNAPSHOT", -, false, true, false, -, -, -, Binary)
projectId                    root         *            *               ModuleID("root", "root", "0.1-SNAPSHOT", -, false, true, false, -, -, -, Binary)
projectInfo                  compat       *            *               ModuleInfo("compat", "compat", -, -, -, "compat", -, -)
projectInfo                  compiler     *            *               ModuleInfo("compiler", "compiler", -, -, -, "compiler", -, -)
projectInfo                  library      *            *               ModuleInfo("library", "library", -, -, -, "library", -, -)
projectInfo                  root         *            *               ModuleInfo("root", "root", -, -, -, "root", -, -)
publishArtifact              *            *            *               true
publishArtifact              *            test         *               false
publishArtifact              compat       *            makePom         true
publishArtifact              compiler     *            makePom         true
publishArtifact              library      *            makePom         true
publishArtifact              root         *            makePom         true
publishMavenStyle            *            *            *               true
resourceDirectory            compat       compile      *               /mirror/r/policy/compat/src/main/resources
resourceDirectory            compat       test         *               /mirror/r/policy/compat/src/test/resources
resourceDirectory            compiler     compile      *               /mirror/r/policy/compiler/src/main/resources
resourceDirectory            compiler     test         *               /mirror/r/policy/compiler/src/test/resources
resourceDirectory            library      compile      *               /mirror/r/policy/library/src/main/resources
resourceDirectory            library      test         *               /mirror/r/policy/library/src/test/resources
resourceDirectory            root         compile      *               /mirror/r/policy/src/main/resources
resourceDirectory            root         test         *               /mirror/r/policy/src/test/resources
resourceManaged              compat       *            *               /mirror/r/policy/compat/target/scala-2.10/resource_managed
resourceManaged              compat       compile      *               /mirror/r/policy/compat/target/scala-2.10/resource_managed/main
resourceManaged              compat       test         *               /mirror/r/policy/compat/target/scala-2.10/resource_managed/test
resourceManaged              compiler     *            *               /mirror/r/policy/compiler/target/scala-2.10/resource_managed
resourceManaged              compiler     compile      *               /mirror/r/policy/compiler/target/scala-2.10/resource_managed/main
resourceManaged              compiler     test         *               /mirror/r/policy/compiler/target/scala-2.10/resource_managed/test
resourceManaged              library      *            *               /mirror/r/policy/library/target/scala-2.10/resource_managed
resourceManaged              library      compile      *               /mirror/r/policy/library/target/scala-2.10/resource_managed/main
resourceManaged              library      test         *               /mirror/r/policy/library/target/scala-2.10/resource_managed/test
resourceManaged              root         *            *               /mirror/r/policy/target/scala-2.10/resource_managed
resourceManaged              root         compile      *               /mirror/r/policy/target/scala-2.10/resource_managed/main
resourceManaged              root         test         *               /mirror/r/policy/target/scala-2.10/resource_managed/test
retrieveManaged              *            *            *               false
retrievePattern              *            *            *               "[type]s/[organisation]/[module]/(scala_[scalaVersion]/)(sbt_[sbtVersion]/)[artifact](-[revision])(-[classifier]).[ext]"
sbtBinaryVersion             *            *            *               "0.13"
sbtDependency                *            *            *               ModuleID("org.scala-sbt", "sbt", "0.13.5", -, false, true, false, -, -, -, disabled)
sbtPlugin                    *            *            *               false
sbtResolver                  *            *            *               URLRepository("typesafe-ivy-releases", <sbt.Patterns>)
sbtVersion                   *            *            *               "0.13.5"
scalaBinaryVersion           compat       *            *               "2.10"
scalaBinaryVersion           compiler     *            *               "2.10"
scalaBinaryVersion           library      *            *               "2.10"
scalaBinaryVersion           root         *            *               "2.10"
scalaOrganization            *            *            *               "org.scala-lang"
scalaSource                  compat       compile      *               /mirror/r/policy/compat/src/main/scala
scalaSource                  compat       test         *               /mirror/r/policy/compat/src/test/scala
scalaSource                  compiler     compile      *               /mirror/r/policy/compiler/src/main/scala
scalaSource                  compiler     test         *               /mirror/r/policy/compiler/src/test/scala
scalaSource                  library      compile      *               /mirror/r/policy/library/src/main/scala
scalaSource                  library      test         *               /mirror/r/policy/library/src/test/scala
scalaSource                  root         compile      *               /mirror/r/policy/src/main/scala
scalaSource                  root         test         *               /mirror/r/policy/src/test/scala
scalaVersion                 *            *            *               "2.10.4"
settingsDumpFile             {.}          *            *               /mirror/r/policy/settings.dump
showSuccess                  *            *            *               true
showTiming                   *            *            *               true
sourceDirectory              compat       *            *               /mirror/r/policy/compat/src
sourceDirectory              compat       compile      *               /mirror/r/policy/compat/src/main
sourceDirectory              compat       test         *               /mirror/r/policy/compat/src/test
sourceDirectory              compiler     *            *               /mirror/r/policy/compiler/src
sourceDirectory              compiler     compile      *               /mirror/r/policy/compiler/src/main
sourceDirectory              compiler     test         *               /mirror/r/policy/compiler/src/test
sourceDirectory              library      *            *               /mirror/r/policy/library/src
sourceDirectory              library      compile      *               /mirror/r/policy/library/src/main
sourceDirectory              library      test         *               /mirror/r/policy/library/src/test
sourceDirectory              root         *            *               /mirror/r/policy/src
sourceDirectory              root         compile      *               /mirror/r/policy/src/main
sourceDirectory              root         test         *               /mirror/r/policy/src/test
sourceManaged                compat       *            *               /mirror/r/policy/compat/target/scala-2.10/src_managed
sourceManaged                compat       compile      *               /mirror/r/policy/compat/target/scala-2.10/src_managed/main
sourceManaged                compat       test         *               /mirror/r/policy/compat/target/scala-2.10/src_managed/test
sourceManaged                compiler     *            *               /mirror/r/policy/compiler/target/scala-2.10/src_managed
sourceManaged                compiler     compile      *               /mirror/r/policy/compiler/target/scala-2.10/src_managed/main
sourceManaged                compiler     test         *               /mirror/r/policy/compiler/target/scala-2.10/src_managed/test
sourceManaged                library      *            *               /mirror/r/policy/library/target/scala-2.10/src_managed
sourceManaged                library      compile      *               /mirror/r/policy/library/target/scala-2.10/src_managed/main
sourceManaged                library      test         *               /mirror/r/policy/library/target/scala-2.10/src_managed/test
sourceManaged                root         *            *               /mirror/r/policy/target/scala-2.10/src_managed
sourceManaged                root         compile      *               /mirror/r/policy/target/scala-2.10/src_managed/main
sourceManaged                root         test         *               /mirror/r/policy/target/scala-2.10/src_managed/test
sourcesInBase                *            *            *               true
target                       compat       *            *               /mirror/r/policy/compat/target
target                       compat       compile      doc             /mirror/r/policy/compat/target/scala-2.10/api
target                       compat       test         doc             /mirror/r/policy/compat/target/scala-2.10/test-api
target                       compiler     *            *               /mirror/r/policy/compiler/target
target                       compiler     compile      doc             /mirror/r/policy/compiler/target/scala-2.10/api
target                       compiler     test         doc             /mirror/r/policy/compiler/target/scala-2.10/test-api
target                       library      *            *               /mirror/r/policy/library/target
target                       library      compile      doc             /mirror/r/policy/library/target/scala-2.10/api
target                       library      test         doc             /mirror/r/policy/library/target/scala-2.10/test-api
target                       root         *            *               /mirror/r/policy/target
target                       root         compile      doc             /mirror/r/policy/target/scala-2.10/api
target                       root         test         doc             /mirror/r/policy/target/scala-2.10/test-api
testForkedParallel           *            *            *               false
thisProject                  compat       *            *               <sbt.Project$$anon$1>
thisProject                  compiler     *            *               <sbt.Project$$anon$1>
thisProject                  library      *            *               <sbt.Project$$anon$1>
thisProject                  root         *            *               <sbt.Project$$anon$1>
thisProjectRef               compat       *            *               ProjectRef(file:/mirror/r/policy/, "compat")
thisProjectRef               compiler     *            *               ProjectRef(file:/mirror/r/policy/, "compiler")
thisProjectRef               library      *            *               ProjectRef(file:/mirror/r/policy/, "library")
thisProjectRef               root         *            *               ProjectRef(file:/mirror/r/policy/, "root")
timingFormat                 *            *            *               <java.text.SimpleDateFormat>
traceLevel                   *            *            console         Int.MaxValue
traceLevel                   *            *            consoleProject  Int.MaxValue
traceLevel                   *            *            run             0
traceLevel                   *            *            runMain         0
trapExit                     *            *            *               true
unmanagedBase                compat       *            *               /mirror/r/policy/compat/lib
unmanagedBase                compiler     *            *               /mirror/r/policy/compiler/lib
unmanagedBase                library      *            *               /mirror/r/policy/library/lib
unmanagedBase                root         *            *               /mirror/r/policy/lib
updateConfiguration          compat       *            *               <sbt.UpdateConfiguration>
updateConfiguration          compiler     *            *               <sbt.UpdateConfiguration>
updateConfiguration          library      *            *               <sbt.UpdateConfiguration>
updateConfiguration          root         *            *               <sbt.UpdateConfiguration>
useGpg                       *            *            *               false
useGpgAgent                  *            *            *               false
version                      *            *            *               "0.1-SNAPSHOT"
