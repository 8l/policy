logImplicits.scala:2: applied implicit conversion from xs.type to ?{def size: ?} = implicit def byteArrayOps(xs: Array[Byte]): scala.collection.mutable.ArrayOps[Byte]
  def f(xs: Array[Byte]) = xs.size
                           ^
logImplicits.scala:7: applied implicit conversion from String("abc") to ?{def map: ?} = implicit def augmentString(x: String): scala.collection.immutable.StringOps
  def f = "abc" map (_ + 1)
          ^
logImplicits.scala:7: error: Cannot construct a collection of type That with elements of type Int based on a collection of type String.
  def f = "abc" map (_ + 1)
                ^
logImplicits.scala:15: inferred view from String("abc") to Int = C.this.convert:(p: String("abc"))Int
  math.max(122, x: Int)
                ^
logImplicits.scala:19: applied implicit conversion from Int(1) to ?{def ->: ?} = implicit def ArrowAssoc[A](self: A): ArrowAssoc[A]
  def f = (1 -> 2) + "c"
           ^
logImplicits.scala:19: error: value + is not a member of (Int, Int)
  def f = (1 -> 2) + "c"
                   ^
two errors found
